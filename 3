import sys
from PyQt6 import uic
from PyQt6.QtGui import QPixmap, QKeyEvent
from PyQt6.QtWidgets import QApplication, QLabel, QMainWindow
import requests


class MainWindow(QMainWindow):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        uic.loadUi('maaps.ui', self)
        self.api_server = 'https://static-maps.yandex.ru/1.x/'
        self.map_zoom = 10
        self.delta = 0.1
        self.map_ll = [37.621601, 55.753460]
        self.map_l = 'map'
        self.refresh_map()

    def keyPressEvent(self, event: QKeyEvent):
        if event.key() == Qt.Key.Key_PageUp and self.map_zoom < 20:
            self.map_zoom += 1
        elif event.key() == Qt.Key.Key_PageDown and self.map_zoom > 0:
            self.map_zoom -= 1
        elif event.key() == Qt.Key.Key_Up:
            self.map_ll[1] += self.delta
        elif event.key() == Qt.Key.Key_Down:
            self.map_ll[1] -= self.delta
        elif event.key() == Qt.Key.Key_Left:
            self.map_ll[0] -= self.delta
        elif event.key() == Qt.Key.Key_Right:
            self.map_ll[0] += self.delta

        self.refresh_map()

    def refresh_map(self):
        map_params = {
            'll': ','.join(map(str, self.map_ll)),
            'l': self.map_l,
            'z': self.map_zoom
        }

        response = requests.get(self.api_server, params=map_params)
        if not response:
            print('Ошибка выполнения запроса:')
            print('Https статус:', response.status_code, '(', response.reason, ')')
            sys.exit(1)

        pixmap = QPixmap()
        pixmap.loadFromData(response.content)
        self.label.setPixmap(pixmap)


if __name__ == '__main__':
    app = QApplication(sys.argv)
    win = MainWindow()
    win.show()
    sys.exit(app.exec())
